// read_write: 0 for read, 1 for write
// Address: 10 bits byte address
// write_data: 32 bits value (8 bits are enough for this project demo)
// keep track of the output of your (cache+memory) block, which are read_data and hit_miss
// also please find a way to show the content of the main memory 

initial 
begin
	#0 read_write = 0; address = 10'b0000000000; //should miss
	#10 read_write = 1; address = 10'b0000000000; write_data = 8'b11111111; //should hit
	#10 read_write = 0; address = 10'b0000000000; //should hit and read out 0xff
	
	//here check main memory content, 
	//the first byte should remain 0x00 if it is write-back, 
	//should change to 0xff if it is write-through.
	
	#10 read_write = 0; address = 10'b1000000000; //should miss
	#10 read_write = 0; address = 10'b0000000000; //should hit for 2-way associative, should miss for directly mapped
	
	#10 read_write = 0; address = 10'b1100000000; //should miss
	#10 read_write = 0; address = 10'b1000000000; //should miss both for directly mapped and for 2-way associative (Least-Recently-Used policy)
	
	//here check main memory content, 
	//the first byte should be 0xff
end